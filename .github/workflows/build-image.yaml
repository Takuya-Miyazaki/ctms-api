name: Build Docker image

on: [ push, pull_request ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
    steps:
      - name: Get Short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha

  build-image:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        id: configure-aws-creds
        env:
          AWS_REGION: us-west-2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push to ECR
        id: build-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ctms-api
          IMAGE_TAG: ${{ needs.prepare.outputs.SHORT_SHA }}
        run: |
          docker build --file docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker image tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logut of Amazon ECR
        if: always()
        run: |
          docker logout ${{ steps.login-ecr.outputs.registry }}
